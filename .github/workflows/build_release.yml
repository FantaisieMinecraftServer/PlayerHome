name: Build & Release

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version_out.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: "8.8"

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Get version from build.gradle
        id: version_out
        run: |
          VERSION=$(./gradlew -q printVersion)
          echo "version=v$VERSION" >> $GITHUB_OUTPUT

      - name: Compare version with latest git tag
        run: |
          OLD_VER=$(git tag --list 'v*' --sort=-v:refname | head -n 1 | sed -e "s/v//")
          NEW_VER=$(echo ${{ steps.version_out.outputs.version }} | sed -e "s/v//")

          if [ 1 -eq "$(echo "${OLD_VER} >= ${NEW_VER}" | bc)" ]; then
            echo "バージョン番号が旧バージョン以下です。OLD_VER=${OLD_VER}, NEW_VER=${NEW_VER}"
            exit 1
          fi

      - name: Build with Gradle
        run: gradle build

      - name: Archive Plugin Jar
        run: |
          mkdir -p release
          cp build/libs/*.jar release/PlayerHome.jar
          ls -la release

      - uses: actions/upload-artifact@v4
        with:
          name: plugin-jar
          path: release/PlayerHome.jar

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag: ${{ needs.build.outputs.version }}
          artifacts: "PlayerHome.jar"
          releaseName: "PlayerHome ${{ needs.build.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
